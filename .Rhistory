version
packageStatus()
.libPaths()
source("http://bioconductor.org/biocLite.R")
biocLite("conumee")
library("optparse")
library("rmarkdown")
install.packages("manipulate")
install.packages(c("rmarkdown", "optparse", "knitr"))
library("rmarkdown")
library("knitr")
library(RCurl)
library(ggplot)
library(ggplot2)
URL<-("https://raw.githubusercontent.com/ryanjw/ngs-3rdweek/master/visualizations/datasets/fly_data.txt")
dataset<-read.table(textConnection(getURL(URL)),header=T,check.names=F,sep="\t")
ggplot(dataset)+geom_density(aes(x=FBgn0000022,fill=fly,alpha=0.5))
gglot(dataset)+geom_density
ggplot(dataset)+geom_histogram(aes(x=FBgn0000022,fill=fly,alpha=0.5))
ggplot(dataset)+geom_histogram(aes(x=FBgn0000022,fill=fly,alpha=0.5))
names(dataset)
names(dataset)[1:50]
ggplot(dataset)+geom_histogram(aes(x=FBgn0000056,fill=fly,alpha=0.5))
?geom_histogram
install.packages("vegan")
library(vegan)
adonis(dataset[,-c(1:3)]~dataset$fly*dataset$type)
head(dataset[,1:10])
?adonis
adonis(decostand(dataset[,-c(1:3)],method="total")~dataset$fly*dataset$type)
adonis(decostand(dataset[,-c(1:3)],method=c("pa","jaccard")~dataset$fly*dataset$type)
)
adonis(decostand(dataset[,-c(1:3)],method=c("pa","jaccard"))~dataset$fly*dataset$type)
adonis(decostand(dataset[,-c(1:3)],method="pa",method="jaccard")~dataset$fly*dataset$type)
adonis(decostand(dataset[,-c(1:3)],method="pa")~dataset$fly*dataset$type,method="jaccard")
URL<-("https://raw.githubusercontent.com/ryanjw/ngs-3rdweek/master/multivariate-viz/fly_data_with_unknowns.txt")
URL<-("https://raw.githubusercontent.com/ryanjw/ngs-3rdweek/master/visualizations/multivariate-viz/fly_data_with_unknowns.txt")
dataset<-read.table(textConnection(getURL(URL)),header=T,check.names=F,sep="\t")
dim(dataset)
head(dataset[,1:10])
tail(dataset[,1:10])
mds<-metaMDS(dataset[,-c(1:4)],distance="bray",autotransform=F,k=3 )
sc<-data.frame(scores(mds),dataset[,1:3])
head(sc)
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,shape=fly,colour=type))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,shape=type,colour=fly))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,colour=fly))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,colour=rnorm(52)))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2),colour=rnorm(52))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2),colour=fly)
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,colour=fly))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,size=2,colour=fly))
sc$fly
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,size=2,colour=info))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,colour=info),size=2)
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,colour=info,shape=type),size=2)
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,colour=info,shape=type),size=3)
pca<-capscale(dataset[,-c(1:4)]~1)
pca
eigs<-eigenvals(pca)
eigs/sum(eigs)
ggplot(sc)+geom_point(aes(x=MDS1,y=MDS2,colour=info,shape=type))+labs(x="MDS1 (75.9% of variation explained)",y="MDS1 (5.8% of variation explained)")
sc<-data.frame(scores(pca)$sites,dataset[,1:4])
ggplot(sc)+geom_point(aes(x=MDS1,y=MDS2,colour=info,shape=type))+labs(x="MDS1 (75.9% of variation explained)",y="MDS1 (5.8% of variation explained)")
eigenvals(pca)
sum(eigs)
eigs/sum(eigs)
pcoa<-capscale(decostand(dataset[,-c(1:4)],"total")~1,distance="bray")
pcoa
eigs<-eigenvals(pcoa)
eigs/sum(eigs)
sc<-data.frame(scores(pcoa)$sites,dataset[,1:4])
ggplot(sc)+geom_point(aes(x=MDS1,y=MDS2,colour=info,shape=type))+labs(x="MDS1 (33.0% of variation explained)",y="MDS1 (8.2% of variation explained)")
pcoa<-capscale(decostand(dataset[,-c(1:4)],"total")~dataset$fly,distance="bray")
scores(pcoa)$centroids
ggplot(sc)+geom_point(aes(x=MDS1,y=MDS2,colour=info,shape=type))+labs(x="MDS1 (33.0% of variation explained)",y="MDS1 (8.2% of variation explained)")+annotate("text",x=c(-.157,-.077,.17),y=c(-.004,.670,.156),label=c("HYB","ORE","SAM"))
source("http://bioconductor.org/biocLite.R")
biocLite(c("pathview", "edgeR", "gage"))
100*1132416/152126075
(76)(5346216)/(152126075)
76*5346216/152126075
100*17074344/152126075
76*(5346216/4)/152126075
100*(1132416/4)/152126075
76*(5346216/4)/152126075
100*(17074344/4)/152126075
sessionInfo()
packageurl <- "http://cran.r-project.org/src/contrib/Archive/knitr/knitr_1.13.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
packageurl <- "http://cran.r-project.org/src/contrib/Archive/knitr/knitr_1.12.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
install.packages('stringr')
knit_with_parameters('~/Documents/NYUMC/Dasen/scripts/Dasen_RNAseq_report_controls.Rmd')
install.packages(c("knitr", "rmarkdown"))
install.packages(c("knitr", "rmarkdown"))
library(DESeq2)
library("lattice")
library(biomaRt)
library(tximport)
library(readr)
library("RColorBrewer")
setwd("~/Documents/UCDavis/ECE221/ECE221_final_project")
source('~/Documents/scripts/plotPCAWithSampleNames.R')
#flymatrix<-read.csv("flies_space_counts.csv")
flymatrix<-read.csv("GSE80323_normalized_gene_tpm.csv")
head(flymatrix)
# SRR3390478.quant = G1R1
# SRR3390479.quant = G1R2
# SRR3390480.quant = G1R3
# SRR3390481.quant = G1R4
# SRR3390482.quant = G3R1
# SRR3390483.quant = G3R2
# SRR3390484.quant = G3R3 = G1R1
# SRR3390485.quant = G3R4
#colnames(flymatrix)<-c("Name","G3R3","G1R2","G1R3","G1R4","G3R1","G3R2","G1R1","G3R4")
colnames(flymatrix)<-c("Name","G1R1","G1R2","G1R3","G1R4","G3R1","G3R2","G3R3","G3R4")
head(flymatrix)
rownames(flymatrix)<-flymatrix$Name
flymatrix<-flymatrix[,c(2:9)]
colnames(flymatrix)
head(flymatrix)
# get annoations
ensembl=useMart("ensembl")
ensembl_id<-rownames(flymatrix)
ensembl = useDataset("dmelanogaster_gene_ensembl",mart=ensembl)
query<-getBM(attributes=c('flybase_transcript_id','ensembl_gene_id','external_gene_name','description'), filters = 'flybase_transcript_id', values = ensembl_id, mart=ensembl)
tx2gene<-query[,c(1,2)]
colnames(tx2gene)<-c("TXNAME","GENEID")
####
# import salmon
dir<-"/Users/cohenl06/Documents/UCDavis/ECE221/"
list.files("/Users/cohenl06/Documents/UCDavis/ECE221/salmon")
files <- file.path(dir, "salmon",c("SRR3390478.quant","SRR3390479.quant","SRR3390480.quant","SRR3390481.quant","SRR3390482.quant","SRR3390483.quant","SRR3390484.quant","SRR3390485.quant"), "quant.sf")
names(files) <- c("G1R1","G1R2","G1R3","G1R4","G3R1","G3R2","G3R3","G3R4")
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene, reader = read_tsv)
head(txi.salmon$counts)
dim(txi.salmon$counts)
ExpDesign <- data.frame(row.names=colnames(txi.salmon$counts), condition = c("G1","G1","G1","G1","G3","G3","G3","G3"))
dds <- DESeqDataSetFromTximport(txi.salmon, ExpDesign, ~condition)
#dds<-DESeqDataSetFromMatrix(countData=flymatrix, colData=ExpDesign,design=~condition)
dds$condition <- relevel(dds$condition, "G1")
dds<-DESeq(dds,betaPrior=FALSE)
norm_counts<-counts(dds,normalized=TRUE)
norm_counts_data<-as.data.frame(norm_counts)
dim(norm_counts_data)
filtered_norm_counts<-norm_counts_data[!rowSums(norm_counts_data==0)>=1, ]
dim(filtered_norm_counts)
head(filtered_norm_counts)
GeneID<-rownames(filtered_norm_counts)
filtered_norm_counts<-cbind(filtered_norm_counts,GeneID)
dim(filtered_norm_counts)
colnames(query)
col.names<-c("flybase_transcript_id","GeneID","external_gene_id","description")
colnames(query)<-col.names
query_gene<-query[,c(2,3,4)]
dim(query_gene)
merge_biomart_res_counts <- merge(filtered_norm_counts,query_gene,by=unique("GeneID"))
counts<-merge_biomart_res_counts[!duplicated(merge_biomart_res_counts$GeneID), ]
head(counts)
dim(counts)
###
log_dds<-rlog(dds)
plotPCAWithSampleNames(log_dds, intgroup="condition", ntop=40000)
library(DESeq2)
library("lattice")
library(biomaRt)
library(tximport)
library(readr)
library("RColorBrewer")
setwd("~/Documents/UCDavis/ECE221/ECE221_final_project")
source('~/Documents/scripts/plotPCAWithSampleNames.R')
#flymatrix<-read.csv("flies_space_counts.csv")
flymatrix<-read.csv("GSE80323_normalized_gene_tpm.csv")
head(flymatrix)
# SRR3390478.quant = G1R1
# SRR3390479.quant = G1R2
# SRR3390480.quant = G1R3
# SRR3390481.quant = G1R4
# SRR3390482.quant = G3R1
# SRR3390483.quant = G3R2
# SRR3390484.quant = G3R3 = G1R1
# SRR3390485.quant = G3R4
#colnames(flymatrix)<-c("Name","G3R3","G1R2","G1R3","G1R4","G3R1","G3R2","G1R1","G3R4")
colnames(flymatrix)<-c("Name","G1R1","G1R2","G1R3","G1R4","G3R1","G3R2","G3R3","G3R4")
head(flymatrix)
rownames(flymatrix)<-flymatrix$Name
flymatrix<-flymatrix[,c(2:9)]
colnames(flymatrix)
head(flymatrix)
# get annoations
ensembl=useMart("ensembl")
ensembl_id<-rownames(flymatrix)
ensembl = useDataset("dmelanogaster_gene_ensembl",mart=ensembl)
query<-getBM(attributes=c('flybase_transcript_id','ensembl_gene_id','external_gene_name','description'), filters = 'flybase_transcript_id', values = ensembl_id, mart=ensembl)
tx2gene<-query[,c(1,2)]
colnames(tx2gene)<-c("TXNAME","GENEID")
####
# import salmon
dir<-"/Users/cohenl06/Documents/UCDavis/ECE221/"
list.files("/Users/cohenl06/Documents/UCDavis/ECE221/salmon")
files <- file.path(dir, "salmon",c("SRR3390478.quant","SRR3390479.quant","SRR3390480.quant","SRR3390481.quant","SRR3390482.quant","SRR3390483.quant","SRR3390484.quant","SRR3390485.quant"), "quant.sf")
names(files) <- c("G1R1","G1R2","G1R3","G1R4","G3R1","G3R2","G3R3","G3R4")
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene, reader = read_tsv)
head(txi.salmon$counts)
dim(txi.salmon$counts)
ExpDesign <- data.frame(row.names=colnames(txi.salmon$counts), condition = c("G1","G1","G1","G1","G3","G3","G3","G3"))
dds <- DESeqDataSetFromTximport(txi.salmon, ExpDesign, ~condition)
dds$condition <- relevel(dds$condition, "G1")
#dds<-DESeqDataSetFromMatrix(countData=flymatrix, colData=ExpDesign,design=~condition)
dds<-DESeq(dds,betaPrior=FALSE)
norm_counts<-counts(dds,normalized=TRUE)
norm_counts_data<-as.data.frame(norm_counts)
dim(norm_counts_data)
query<-getBM(attributes=c('flybase_transcript_id','ensembl_gene_id','external_gene_name','description'), filters = 'flybase_transcript_id', values = ensembl_id, mart=ensembl)
ensembl=useMart("ensembl")
ensembl_id<-rownames(flymatrix)
ensembl = useDataset("dmelanogaster_gene_ensembl",mart=ensembl)
query<-getBM(attributes=c('flybase_transcript_id','ensembl_gene_id','external_gene_name','description'), filters = 'flybase_transcript_id', values = ensembl_id, mart=ensembl)
ensembl_id<-rownames(flymatrix)
ensembl = useDataset("dmelanogaster_gene_ensembl",mart=ensembl)
query<-getBM(attributes=c('flybase_transcript_id','ensembl_gene_id','external_gene_name','description'), filters = 'flybase_transcript_id', values = ensembl_id, mart=ensembl)
ensembl = useDataset("dmelanogaster_gene_ensembl",mart=ensembl)
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene, reader = read_tsv)
